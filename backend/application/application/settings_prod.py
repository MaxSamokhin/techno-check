"""
Django settings for application project.

Generated by 'django-admin startproject' using Django 2.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
import raven

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 't^(2^&_#r09-kxb9zkz$un)pmr_l)+mvsvm=d@)uqz8bs7paz&'

# SECURITY WARNING: don't run with debug turned on in production!
config = lambda value, default: os.environ.get(value, default)
DEBUG = bool(config('DEBUG', False))

ALLOWED_HOSTS = ['*']

HOST_URL = config('HOST_URL', '')
SALT = SECRET_KEY
# Application definition

ADMINS = [('Nikolay', 'yaminsky96@gmail.com')]

INSTALLED_APPS = [
    'raven.contrib.django.raven_compat',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework_swagger',
    'authentication',
    'users',
    'testing',
    'administration',
    'inviter',
    'results'
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'utils.auth.NoCSRFSessionAuthentication',
        'rest_framework.authentication.BasicAuthentication'
    ),
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.locale.LocaleMiddleware',
]

if not DEBUG:
    RAVEN_CONFIG = {
        'dsn': 'https://6b5d9d1dbd1d42a882eed483ce53016b@sentry.io/1326591',
        'release': raven.fetch_git_sha(os.path.abspath(os.pardir)),
    }

ROOT_URLCONF = 'application.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

AUTH_USER_MODEL = 'users.User'

SESSION_ENGINE = 'redis_sessions.session'

REDIS_HOST = config('REDIS_HOST', 'redis')

SESSION_REDIS = {
    'host': REDIS_HOST,
    'port': 6379,
    'db': 0,
    'prefix': 'session',
    'socket_timeout': 1,
    'retry_on_timeout': False
}

CELERY_BROKER_URL = f'redis://{REDIS_HOST}/1'

WSGI_APPLICATION = 'application.wsgi.application'

APPEND_SLASH = False

# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': config('DB_NAME', 'test'),
        'USER': config('DB_USER', 'test'),
        'PASSWORD': config('DB_PASSWORD', 'password'),
        'HOST': config('DB_HOST', 'localhost'),
        'PORT': config('DB_PORT', '5432'),
    }
}

# Email config

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = config('EMAIL_HOST', '127.0.0.1')
EMAIL_PORT = config('EMAIL_PORT', '25')
EMAIL_HOST_USER = config('EMAIL_USER', '')
EMAIL_HOST_PASSWORD = config('EMAIL_PASSWORD', '')
# EMAIL_USE_TLS = True
EMAIL_USE_SSL = config('EMAIL_USE_SSL', 'True') == 'True'
DEFAULT_FROM_EMAIL = config('FROM_EMAIL', '')
SERVER_EMAIL = config('FROM_EMAIL', '')

# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

TIME_ZONE = 'Europe/Moscow'

LANGUAGE_CODE = "ru-RU"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

TMP_PATH = config('TMP_PATH', '/tmp/')

if DEBUG:
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'level': 'DEBUG',
                'class': 'logging.StreamHandler',
            }
        },
        'loggers': {
            'django.db.backends': {
                'handlers': ['console'],
                'level': 'DEBUG',
            },
        }
    }
